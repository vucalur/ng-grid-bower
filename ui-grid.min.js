/*! ui-grid - v2.0.7-g1468008 - 2014-01-09
* Copyright (c) 2014 ; Licensed MIT */
!function(){"use strict";var a=angular.module("ui.grid.body",[]);a.directive("uiGridBody",["$log","gridUtil",function(a,b){return{replace:!0,templateUrl:"ui-grid/ui-grid-body",require:"?^uiGrid",scope:!1,link:function(c,d,e,f){if(void 0===f)throw new Error("[ui-grid-body] uiGridCtrl is undefined!");a.debug("ui-grid-body link"),f.canvas=angular.element(d[0].getElementsByClassName("ui-grid-canvas")[0]),f.viewport=angular.element(d[0].getElementsByClassName("ui-grid-viewport")[0]),f.viewportOuterHeight=b.outerElementHeight(f.viewport[0]),f.prevScrollTop=0,f.currentTopRow=0,f.adjustScrollVertical=function(a,b,c){if(f.prevScrollTop!==a||c){a>0&&f.canvas[0].scrollHeight-a<=f.viewportOuterHeight,a=f.canvas[0].scrollHeight*b;var d=f.grid.minRowsToRender(),e=f.grid.options.data.length-d;f.maxRowIndex=e;var g=Math.ceil(Math.min(e,e*b));g>e&&(g=e);var h=[];if(f.grid.options.data.length>f.grid.options.virtualizationThreshold){if(f.prevScrollTop<a&&g<f.prevScrollIndex+f.grid.options.scrollThreshold&&e>g)return;if(f.prevScrollTop>a&&g>f.prevScrollIndex-f.grid.options.scrollThreshold&&e>g)return;var j=Math.max(0,g-f.grid.options.excessRows),k=Math.min(f.grid.options.data.length,g+d+f.grid.options.excessRows);h=[j,k]}else{var l=f.grid.options.data.length;h=[0,Math.max(l,d+f.grid.options.excessRows)]}f.prevScrollTop=a,i(h),f.prevScrollIndex=g}};var g=c.$on("uiGridScrollVertical",function(a,b){var c=f.grid.getCanvasHeight()-f.grid.viewportHeight,d=Math.max(0,b.scrollPercentage*c),e=1,g=b.scrollPercentage*e;f.adjustScrollVertical(d,g),f.viewport[0].scrollTop=d,f.grid.options.offsetTop=d});d.bind("wheel mousewheel DomMouseScroll MozMousePixelScroll",function(a){a.preventDefault();var e=b.normalizeWheelEvent(a),g=-120*e.deltaY,h=(f.viewport[0].scrollTop+g)/(f.grid.options.canvasHeight-f.grid.options.viewportHeight);0>h&&(h=0),h>1&&(h=1),c.$broadcast("uiGridScrollVertical",{scrollPercentage:h,target:d})}),d.bind("keyDown",function(){}),d.bind("$destroy",function(){g(),d.unbind("keyDown"),["wheel","mousewheel","DomMouseScroll","MozMousePixelScroll"].forEach(function(a){d.unbind(a)})});var h=function(a){c.$evalAsync(function(){f.grid.setRenderedRows(a)})},i=function(a){var b=f.grid.options.data.slice(a[0],a[1]);f.currentTopRow=a[0],h(b)};c.rowStyle=function(a){if(0===a&&0!==f.currentTopRow){var b=f.prevScrollIndex/f.maxRowIndex,c=Math.ceil((f.grid.options.canvasHeight-f.grid.options.viewportHeight)%f.grid.options.rowHeight*b),d=1-b,e=f.grid.options.offsetTop-f.grid.options.rowHeight*(f.grid.options.excessRows-d)-c;return{"margin-top":e+"px"}}return null}}}}])}(),function(){"use strict";var a=angular.module("ui.grid.header",["ui.grid"]);a.directive("uiGridHeader",["$log","$templateCache","$compile","gridUtil",function(a,b,c,d){return{restrict:"EA",templateUrl:"ui-grid/ui-grid-header",replace:!0,require:"?^uiGrid",scope:!1,link:function(b,c,e,f){if(void 0===f)throw new Error("[ui-grid-header] uiGridCtrl is undefined!");a.debug("ui-grid-header link"),f&&(f.grid.headerHeight=d.outerElementHeight(c))}}}])}(),function(){"use strict";var a=angular.module("ui.grid.row",[]);a.directive("uiGridRow",["$log",function(){return{replace:!0,templateUrl:"ui-grid/ui-grid-row",require:"?^uiGrid",scope:{row:"=uiGridRow",rowIndex:"="},compile:function(){return{pre:function(){},post:function(a,b,c,d){if(void 0===d)throw new Error("[ui-grid-row] uiGridCtrl is undefined!");a.grid=d.grid}}}}}])}(),function(){var a=angular.module("ui.grid.scrollbar",[]);a.directive("uiGridScrollbar",["$log","$document","gridUtil",function(a,b,c){return{replace:!0,templateUrl:"ui-grid/ui-grid-scrollbar",require:"?^uiGrid",scope:!1,link:function(d,e,f,g){function h(){var a=Math.floor(Math.max(35,g.grid.getViewportHeight()/g.grid.getCanvasHeight()*g.grid.getViewportHeight()));d.scrollbarStyles=".grid"+g.grid.id+" .ui-grid-scrollbar-vertical { height: "+a+"px; }"}function i(a){a.preventDefault(),n=c.elementHeight(e,"margin"),o=g.grid.getViewportHeight()-n,l=a.screenY-m,b.on("mousemove",j),b.on("mouseup",k)}function j(a){m=a.screenY-l,0>m&&(m=0),m>o&&(m=o);var b=m/o;d.$emit("uiGridScrollVertical",{scrollPercentage:b,target:e})}function k(){b.unbind("mousemove",j),b.unbind("mouseup",k)}if(void 0===g)throw new Error("[ui-grid-scrollbar] uiGridCtrl is undefined!");a.debug("ui-grid-scrollbar link"),d.showScrollbar=function(){return g.grid.getCanvasHeight()>g.grid.getViewportHeight()},g.grid.registerStyleComputation(h);var l=0,m=0,n=c.elementHeight(e,"margin"),o=g.grid.getViewportHeight()-n;e.on("mousedown",i);var p=d.$on("uiGridScrollVertical",function(b,d){d.scrollPercentage<0&&(d.scrollPercentage=0),d.scrollPercentage>1&&(d.scrollPercentage=1),n=c.elementHeight(e,"margin"),o=g.grid.getViewportHeight()-n;var f=d.scrollPercentage*o,h=f;h>g.grid.getCanvasHeight()-n&&(a.debug("newTop too big!",h),h=g.grid.getCanvasHeight()-n),m=f,e.css({top:h+"px"})});e.on("$destroy",function(){p(),b.unbind("mousemove",j),b.unbind("mouseup",k),e.unbind("mousedown")})}}}])}(),function(){var a=angular.module("ui.grid.style",[]);a.directive("uiGridStyle",["$log","$interpolate",function(a,b){return{require:"?^uiGrid",link:function(c,d,e,f){a.debug("ui-grid-style link"),void 0===f&&a.warn("[ui-grid-style link] uiGridCtrl is undefined!");var g=b(d.text(),!0);g&&c.$watch(g,function(a){d.text(a)}),f&&f.grid.registerStyleComputation(function(){var a=f.grid.gridWidth,b=a/f.grid.options.columnDefs.length,d="",e=0;f.grid.options.columnDefs.forEach(function(a,c){d=d+" .grid"+f.grid.id+" .col"+c+" { width: "+b+"px; left: "+e+"px; }",e+=b}),c.columnStyles=d})}}}])}(),function(){"use strict";var a=function(a){this.id=a,this.options=new b,this.headerHeight=this.options.headerRowHeight,this.gridHeight=0,this.gridWidth=0,this.columnsProcessors=[],this.styleComputations=[],this.renderedRows=[]};a.prototype.registerColumnsProcessor=function(a){this.columnsProcessors.push(a)},a.prototype.registerStyleComputation=function(a){this.styleComputations.push(a)},a.prototype.setRenderedRows=function(a){for(var b=0;b<a.length;b++)this.renderedRows.length=a.length,this.renderedRows[b]=a[b]},a.prototype.buildStyles=function(a){var b=this;b.styleComputations.forEach(function(c){c.call(b,a)})},a.prototype.minRowsToRender=function(){return Math.ceil(this.getViewportHeight()/this.options.rowHeight)},a.prototype.getViewportHeight=function(){return this.gridHeight-this.headerHeight},a.prototype.getCanvasHeight=function(){return this.options.rowHeight*this.options.data.length},a.prototype.getTotalRowHeight=function(){return this.options.rowHeight*this.options.data.length};var b=function(){this.data=[],this.columnDefs=[],this.headerRowHeight=30,this.rowHeight=30,this.maxVisibleRowCount=200,this.virtualizationThreshold=50,this.excessRows=4,this.scrollThreshold=4},c=angular.module("ui.grid",["ui.grid.header","ui.grid.body","ui.grid.row","ui.grid.style","ui.grid.scrollbar","ui.grid.util"]);c.controller("ui.grid.controller",["$scope","$element","$attrs","$log","gridUtil",function(b,c,d,e,f){function g(a){if(a){h.grid.options.columnDefs.length<=0&&(h.grid.options.columnDefs=f.getColumnsFromData(a)),h.grid.options.data=a,h.grid.buildStyles();var c=h.viewport[0].scrollTop;h.adjustScrollVertical(c,null,!0),b.$evalAsync(function(){h.refreshCanvas()})}}e.debug("ui-grid controller");var h=this;h.grid=new a(f.newId),angular.extend(h.grid.options,b.uiGrid),b.grid=h.grid,0===h.grid.options.columnDefs.length&&(h.grid.options.columnDefs=b.$eval(d.uiGridColumns)||f.getColumnsFromData(b.uiGrid)),b.$watch("grid.options.columnDefs",function(){h.refreshCanvas()});var i;i=angular.isString(b.uiGrid.data)?b.$parent.$watch(b.uiGrid.data,g):b.$parent.$watch(function(){return b.uiGrid.data},g),b.$on("$destroy",i),b.$watch(function(){return h.grid.styleComputations},function(){h.grid.buildStyles(b)}),h.refreshCanvas=function(){h.grid.buildStyles(b)}}]),c.directive("uiGrid",["$log","$compile","$templateCache","gridUtil",function(a,b,c,d){return{templateUrl:"ui-grid/ui-grid",scope:{uiGrid:"="},replace:!0,controller:"ui.grid.controller",compile:function(){return{post:function(b,c,e,f){a.debug("ui-grid postlink"),f.grid.gridWidth=b.gridWidth=c[0].clientWidth,f.grid.gridHeight=b.gridHeight=d.elementHeight(c),f.refreshCanvas()}}}}}])}(),function(){function a(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)}function b(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0,h=["Top","Right","Bottom","Left"];4>f;f+=2){var i=h[f];if("margin"===c){var j=parseFloat(e[c+i]);isNaN(j)||(g+=j)}if(d){if("content"===c){var k=parseFloat(e["padding"+i]);isNaN(k)||(g-=k)}if("margin"!==c){var l=parseFloat(e["border"+i+"Width"]);isNaN(l)||(g-=l)}}else{var m=parseFloat(e["padding"+i]);if(isNaN(m)||(g+=m),"padding"!==c){var n=parseFloat(e["border"+i+"Width"]);isNaN(n)||(g+=n)}}}return g}function c(c,d,f){var g=!0,h="width"===d?c.offsetWidth:c.offsetHeight,i=a(c),j="border-box"===i.boxSizing;if(0>=h||null==h){if(h=i[d],(0>h||null==h)&&(h=c.style[d]),e.test(h))return h;g=j&&!0,h=parseFloat(h)||0}var k=h+b(c,d,f||(j?"border":"content"),g,i);return k}var d=angular.module("ui.grid.util",[]),e=new RegExp("^("+/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source+")(?!px)[a-z%]+$","i");d.service("gridUtil",["$window",function(){var a={readableColumnName:function(a){return"undefined"==typeof a||void 0===a||null===a?a:("string"!=typeof a&&(a=String(a)),a.replace(/_+/g," ").replace(/^[A-Z]+$/,function(a){return angular.lowercase(angular.uppercase(a.charAt(0))+a.slice(1))}).replace(/(\w+)/g,function(a){return angular.uppercase(a.charAt(0))+a.slice(1)}).replace(/(\w+?(?=[A-Z]))/g,"$1 "))},getColumnsFromData:function(b){var c=[];if(!b||"undefined"==typeof b[0]||void 0===b[0])return[];var d=b[0];return angular.forEach(d,function(b,d){c.push({field:d,name:a.readableColumnName(d)})}),c},newId:function(){var a=(new Date).getTime();return function(){return a+=1}}(),elementWidth:function(){},elementHeight:function(){},normalizeWheelEvent:function(a){var b,c,d,e=a||window.event,f=([].slice.call(arguments,1),0),g=0,h=0,i=0,j=0;return e.wheelDelta&&(f=e.wheelDelta),e.detail&&(f=-1*e.detail),h=f,void 0!==e.axis&&e.axis===e.HORIZONTAL_AXIS&&(h=0,g=-1*f),e.deltaY&&(h=-1*e.deltaY,f=h),e.deltaX&&(g=e.deltaX,f=-1*g),void 0!==e.wheelDeltaY&&(h=e.wheelDeltaY),void 0!==e.wheelDeltaX&&(g=-1*e.wheelDeltaX),i=Math.abs(f),(!b||b>i)&&(b=i),j=Math.max(Math.abs(h),Math.abs(g)),(!c||c>j)&&(c=j),d=f>0?"floor":"ceil",f=Math[d](f/b),g=Math[d](g/c),h=Math[d](h/c),{delta:f,deltaX:g,deltaY:h}}};return["width","height"].forEach(function(b){var d=angular.uppercase(b.charAt(0))+b.substr(1);a["element"+d]=function(a,d){var e=a;return"undefined"!=typeof e.length&&e.length&&(e=a[0]),a?c(e,b,d):null},a["outerElement"+d]=function(b,c){return b?a["element"+d].call(this,b,c?"margin":"border"):null}}),a}])}(),angular.module("ui.grid").run(["$templateCache",function(a){"use strict";a.put("ui-grid/ui-grid-body",'<div class="ui-grid-body"><div class="ui-grid-scrollbar-box"><div ui-grid-viewport="" class="ui-grid-viewport"><div class="ui-grid-canvas"><div ng-repeat="row in grid.renderedRows track by $index" class="ui-grid-row" ng-style="rowStyle($index)"><div ui-grid-row="row" row-index="$index"></div></div></div></div></div><div ui-grid-scrollbar=""></div></div>'),a.put("ui-grid/ui-grid-header",'<div class="ui-grid-top-panel"><div class="ui-grid-header"><div ng-repeat="col in grid.options.columnDefs" class="ui-grid-header-cell col{{ $index }}"><!-- ng-style="{ height: col.headerRowHeight }" --><div class="ui-grid-vertical-bar">&nbsp;</div><!-- ng-style="{height: col.headerRowHeight}" ng-class="{ ngVerticalBarVisible: !$last }" --><!-- <div ng-header-cell></div> --><div class="ui-grid-cell-contents">{{ col.name || col.field }}</div></div></div><div ui-grid-menu=""></div></div>'),a.put("ui-grid/ui-grid-row",'<div><div ng-repeat="col in grid.options.columnDefs" class="ui-grid-cell col{{ $index }}"><!-- ng-style="{ \'cursor\': row.cursor }" ng-class="col.colIndex()" class="{{col.cellClass}}" --><div class="ui-grid-vertical-bar">&nbsp;</div><!-- ng-style="{height: rowHeight}" ng-class="{ ngVerticalBarVisible: !$last }" --><div class="ui-grid-cell-contents">{{ row[col.field] }}</div><!-- ng-class="col.colIndex()" --></div></div>'),a.put("ui-grid/ui-grid-scrollbar",'<div class="ui-grid-scrollbar ui-grid-scrollbar-vertical" ng-show="showScrollbar()"></div>'),a.put("ui-grid/ui-grid",'<div class="ui-grid grid{{ grid.id }}"><!-- TODO (c0bra): add "scoped" attr here, eventually? --><style ui-grid-style="">.grid{{ grid.id }} {\n      /* Styles for the grid */\n    }\n\n    .grid{{ grid.id }} .ui-grid-viewport {\n      height: {{ grid.getViewportHeight() }}px;\n    }\n\n    .grid{{ grid.id }} .ui-grid-canvas {\n      height: {{ grid.getCanvasHeight() }}px;\n    }\n\n    .grid{{ grid.id }} .ui-grid-header, .grid{{ grid.id }} .ui-grid-header-cell .ui-grid-vertical-bar {\n      height: {{ grid.options.headerRowHeight }}px;\n    }\n\n    .grid{{ grid.id }} .ui-grid-row, .grid{{ grid.id }} .ui-grid-cell, .grid{{ grid.id }} .ui-grid-cell .ui-grid-vertical-bar {\n      height: {{ grid.options.rowHeight }}px;\n    }\n\n    .grid{{ grid.id }} .ui-grid-row:last-child .ui-grid-cell {\n      border-bottom-width: {{ ((grid.getTotalRowHeight() < grid.getViewportHeight()) && \'1\') || \'0\' }}px;\n    }\n\n    {{ rowStyles }}\n\n    {{ columnStyles }}\n\n    {{ scrollbarStyles }}</style><div ui-grid-header=""></div><div ui-grid-body=""></div><div ui-grid-footer=""></div></div>')}]);